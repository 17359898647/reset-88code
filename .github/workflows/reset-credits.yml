name: 88code 每日重置额度

on:
    schedule:
        # 每天15:45 UTC时间执行 (北京时间23:45) - github actions 执行时间有延迟，避开高峰
        - cron: "45 15 * * *"
    workflow_dispatch: # 允许手动触发
jobs:
    reset-credits:
        runs-on: ubuntu-latest

        steps:
            - name: 重置88code额度
              run: |
                  # 从环境变量获取配置信息
                  ACCOUNT_IDS="${{ secrets.ACCOUNT_IDS }}"
                  ADMIN_TOKEN="${{ secrets.ADMIN_TOKEN }}"

                  # 检查是否配置了必需的环境变量
                  if [ -z "$ACCOUNT_IDS" ]; then
                    echo "❌ 未配置ACCOUNT_IDS环境变量，跳过重置操作"
                    exit 1
                  fi

                  if [ -z "$ADMIN_TOKEN" ]; then
                    echo "❌ 未配置ADMIN_TOKEN环境变量，跳过重置操作"
                    exit 1
                  fi

                  # 验证token有效性
                  echo "验证token有效性..."
                  TOKEN_CHECK_RESPONSE=$(curl -s 'https://www.88code.org/admin-api/login/getLoginInfo' \
                    -H 'authorization: ${{ secrets.ADMIN_TOKEN }}')

                  # 检查响应中是否包含成功标识
                  if echo "$TOKEN_CHECK_RESPONSE" | grep -q '"ok":true'; then
                    echo "✅ Token验证成功"
                  else
                    echo "❌ Token验证失败，请检查ADMIN_TOKEN是否正确"
                    echo "错误响应: $TOKEN_CHECK_RESPONSE"
                    exit 1
                  fi

                  echo "开始重置额度..."

                  echo "使用环境变量账户ID列表: $ACCOUNT_IDS"

                  # 替换中文逗号为英文逗号，然后分割成数组
                  ACCOUNT_IDS=$(echo "$ACCOUNT_IDS" | sed 's/，/,/g')
                  IFS=',' read -ra ID_ARRAY <<< "$ACCOUNT_IDS"

                  # 统计变量
                  TOTAL_ACCOUNTS=${#ID_ARRAY[@]}
                  SUCCESS_COUNT=0
                  FAILED_COUNT=0

                  echo "总共需要重置 $TOTAL_ACCOUNTS 个账户"

                  # 遍历数组重置每个账户，使用容错机制
                  for i in "${!ID_ARRAY[@]}"; do
                    ACCOUNT_ID="${ID_ARRAY[$i]}"
                    ACCOUNT_NUM=$((i + 1))
                    
                    echo "正在重置第${ACCOUNT_NUM}个账户 (ID: $ACCOUNT_ID)..."
                    
                    # 使用容错机制，即使某个账户失败也继续处理下一个
                    echo "发送重置请求到: https://www.88code.org/admin-api/cc-admin/system/subscription/my/reset-credits/$ACCOUNT_ID"
                    
                    RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" 'https://www.88code.org/admin-api/cc-admin/system/subscription/my/reset-credits/'$ACCOUNT_ID \
                      -H 'authorization: ${{ secrets.ADMIN_TOKEN }}' \
                      --data-raw 'null')
                    
                    HTTP_CODE=$(echo "$RESPONSE" | grep "HTTP_CODE:" | cut -d: -f2)
                    BODY=$(echo "$RESPONSE" | sed '/HTTP_CODE:/d')
                    
                    echo "响应状态码: $HTTP_CODE"
                    echo "响应内容: $BODY"
                    
                    if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "201" ]; then
                      echo "✅ 账户 $ACCOUNT_ID 额度重置成功"
                      SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
                    else
                      echo "❌ 账户 $ACCOUNT_ID 额度重置失败 (状态码: $HTTP_CODE)"
                      FAILED_COUNT=$((FAILED_COUNT + 1))
                    fi
                    
                    # 添加短暂延迟，避免请求过于频繁
                    sleep 1
                  done

                  # 输出最终统计结果
                  echo "📊 重置完成统计："
                  echo "   总账户数: $TOTAL_ACCOUNTS"
                  echo "   成功数量: $SUCCESS_COUNT"
                  echo "   失败数量: $FAILED_COUNT"

                  if [ $FAILED_COUNT -eq 0 ]; then
                    echo "🎉 所有账户额度重置成功！"
                  else
                    echo "⚠️  有 $FAILED_COUNT 个账户重置失败，请检查日志"
                  fi
